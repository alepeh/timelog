# pytest configuration for this repository
# NOTE: Update DJANGO_SETTINGS_MODULE below to match your Django project's settings module
# (e.g., config.settings, mysite.settings). You can also override this via the
# DJANGO_SETTINGS_MODULE environment variable when running pytest.

[pytest]
# pytest-django: Default Django settings module (placeholder - update as needed)
DJANGO_SETTINGS_MODULE = project.settings

# Test file discovery patterns
python_files = tests.py test_*.py *_tests.py

# Helpful default options:
# -ra: show extra test summary info for (s)kipped, (x)failed, etc.
# -q: quieter output
addopts = -ra -q

# Filter common noisy deprecation warnings to keep CI output readable.
# Add or remove lines here as needed for your stack.
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Commonly used markers. Remember to keep these in sync with your test usage.
markers =
    unit: Mark test as a fast, isolated unit test (no network, minimal DB usage)
    integration: Mark test as an integration test (DB/migrations/external services)

# Tips:
# - Override settings module at runtime:
#     export DJANGO_SETTINGS_MODULE=mysite.settings && pytest
# - Or pass it inline (less recommended as it leaks into shell history):
#     DJANGO_SETTINGS_MODULE=mysite.settings pytest
# - In Warp, prefer setting DJANGO_SETTINGS_MODULE as an environment input or in your
#   workspace profile so all test runs pick it up automatically.

